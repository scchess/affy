version 1.3 [under development]

  o read.affybatch2 reads all cel files together in one big hit
    into an affybatch


version 1.2.x:

  o Autoload of cdfenvs on demand (uses reposTools). Can be
  configured through the options.

  o slot 'preprocessing' of the MIAME attribute used to store
  normalization step information [will be polished, list returned
  for the moment. Need for a class and check compliance with MIAME
  standards]
  
  o default methods for normalization, bg correction, pm correction
  and summary now in the package options [options exist for all, but
  only used by normalize for the moment].

  o tuning of the MAS5.0 methods implemented (bgcorrect.mas, ...)
  [Ben for details. add URL for the comparison he made]

  o method plot.ProbeSet, an alternative to barplot, to plot probe
  level information.

  o parameter 'scale' in the method barplot for ProbeSet. All the
  barplots are scaled to eachothers.This is the default.

  o bug in the parser fixed (infinite loop reported with apparently
  non-standard CEL files.).

  o bug in the parser fixed (the 'sd' data returned were not correct).

  o missing slot in the dataset SpikeIn fixed.

  o The function express() is deprecated. It still functions normally 
  but gives warning mesage. It will be removed in a future release.
  The function expresso() should be used as a replacement.

  o bug in normalize.AffyBatch.qspline fixed (thanks to people at
  Insightful). The expression data matrix sent to normalize.qspline
  was mistakingly transposed.

  o The default background on the rma() function has been changed. Now 
  the results from rma() and expresso() should agree completely.

  o New functions 'xy2indices' and 'indices2xy' to shuttle from
  x/y pos to indices (like the ones in cdfenvs) (and reverse).

  o Reformating of the documentation.
 
version 1.1.x:

  o 'image(cel)' scales to the size (# rows and # cols) of a chip.
  locations can be plotted over directly ('plotLocations' was fixed
  accordiginly).

  o 'write.celfile(cel)' to write Cel objects into .CEL files

  o 'getInfoInAffyFile' to snoop in CEL and CDF files

  o 'whatcdf' to get the name of the CDF from the CEL

  o one more slot in class 'Cdf': cdfName (will match with what is 
  returned by 'whatcdf')

  o one more slot in class 'Cel': cdfName (returned by whatcdf)

  o new class 'AffyBatch': cdfName (returned by whatcdf)

  o extensive set of tests in the directory 'tests/'
